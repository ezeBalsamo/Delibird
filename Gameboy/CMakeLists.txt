add_library(entry_point_validator src/entry_point_validator.c include/entry_point_validator.h)
add_library(entry_point_connection_builder src/entry_point_connection_builder.c include/entry_point_connection_builder.h)
add_library(entry_point_logs_manager src/entry_point_logs_manager.c include/entry_point_logs_manager.h)
add_library(entry_point_executor src/entry_point_executor.c include/entry_point_executor.h)
add_library(entry_point_processes_information src/entry_point_processes_information.c include/entry_point_processes_information.h)
add_library(role_mode_strategy src/role_mode_strategy.c include/role_mode_strategy.h)
add_library(subscriber_mode_strategy src/subscriber_mode_strategy.c include/subscriber_mode_strategy.h)
add_library(publisher_mode_strategy src/publisher_mode_strategy.c include/publisher_mode_strategy.h)

target_link_libraries(entry_point_logs_manager common_structures entry_point_validator logger)
target_link_libraries(entry_point_validator common_structures entry_point_processes_information entry_point_logs_manager role_mode_strategy operations_information -lcommons)
target_link_libraries(entry_point_connection_builder common_structures entry_point_validator configuration_manager -lcommons)
target_link_libraries(entry_point_executor sockets entry_point_logs_manager entry_point_connection_builder entry_point_validator pthread_wrapper)
target_link_libraries(entry_point_processes_information common_structures operations_information entry_point_logs_manager -lcommons)
target_link_libraries(role_mode_strategy subscriber_mode_strategy publisher_mode_strategy entry_point_logs_manager common_structures)
target_link_libraries(subscriber_mode_strategy role_mode_strategy entry_point_validator)
target_link_libraries(publisher_mode_strategy role_mode_strategy entry_point_validator)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/target")
add_executable(gameboy src/gameboy.c)

target_link_libraries(gameboy entry_point_validator entry_point_connection_builder entry_point_logs_manager entry_point_executor)
